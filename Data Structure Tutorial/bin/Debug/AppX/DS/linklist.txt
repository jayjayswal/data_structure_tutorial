Class Definition 
class linklist
{
	int data;
	linklist *head;
	linklist *next;
public:
	linklist();
	void add(int);
	void addas_first(int);
	void addas_pos(int,int);
	void display();
	void dele_first();
	void dele_last();
	void dele_bet(int i);
	void count();
	void search(int);
	void sort();

};

Implementation

#include<iostream>
using namespace std;
#include"linklistclass.h"

linklist::linklist()
{
	head=NULL;
}

void linklist::add(int i)
{
	linklist *t,*q;
	t=head;
	if(head==NULL)
	{
		
		head=new linklist;
		head->data=i;
		head->next=NULL;
	}
	else
	{		
		while(t->next!=NULL)
			t=t->next;
		q=new linklist;
		q->data=i;
		t->next=q;
		q->next=NULL;
		
	}
}
void linklist::addas_first(int i)
{
	linklist *q;
	q=new linklist;
	q->data=i;
	q->next=head;
	head=q;
}
void linklist::addas_pos(int i,int j)
{
	int k=0;
	linklist *t,*q;
	t=head;
	q=new linklist;
	q->data=j;
	while(k<i)
	{
		t=t->next;
		k++;
	}
	q->next=t->next;
	t->next=q;
	
}

void linklist::dele_first()
{
	if(head==NULL)
	{
		cout<<"There no element to delete...\n";
	}
	else
	{
	linklist *q;
	q=head;
	head=head->next;
	free(q);
	}
}
void linklist::dele_last()
{
	if(head->next==NULL)  //only one node exsit ....
	{
		linklist *q;
		q=head;
		head=NULL;
		free(q);
	}
	if(head==NULL)
	{
		cout<<"There no element to delete...\n";
	}

	else
	{
	linklist *q,*t;
	q=head;
	while(q->next->next!=NULL)
	{
		q=q->next;
	}
	t=q->next;
	q->next=NULL;
	free(t);
	}
}
void linklist::dele_bet(int i)
{

	linklist *q,*t;
	q=head;
	int k=0;
	while(k<i)
	{
		q=q->next;
		k++;
	}
	t=q->next;
	q->next=t->next;
	free(t);
	
}
void linklist::display()
{
	cout<<"Display:";
	linklist *t;
	t=head;
	while(t!=NULL)
	{
		cout<<t->data<<endl;
				t=t->next;
	}
}
void linklist::count()
{
	linklist *q;
	q=head;
	int j=0;
	while(q->next!=NULL)
	{
		q=q->next;
		j++;
	}
	cout<<"numbre of nodes is:"<<j+1<<endl;
}
void linklist::search(int k)
{
	int i;
	int f=0;
	linklist *q;
	q=head;
	for(i=0;q->next!=NULL;i++)
	{
		if(q->data==k)
		{
			f=1;
			break;
		}
		q=q->next;
	}
	if(q->data==k)
	{
		f=1;
	}
	if(f==1)
	{
		cout<<"position of value is:"<<i<<endl;
	}
	else
	{
		cout<<"Element is not found...";
	}
}
void linklist::sort()
{
	int temp;
	linklist *a,*b;
	a=head;
	b=a->next;
	while(a->next->next!=NULL)
	{
		
	
		b=a->next;
		do
		{
			if(a->data>b->data)
			{
				temp=a->data;
				a->data=b->data;
				b->data=temp;
			}
		
			b=b->next;
		
		}while(b->next!=NULL);
		a=a->next;
		
	}
}

APPLICATION

#include<iostream>
using namespace std;
#include"linklistclass.h"
void main()
{
	linklist l;
	int c,a,b;
	
	
	do
	{
		cout<<".....................MENU............................"<<endl
		<<"Press 1. to add a value."<<endl
		<<"press 2. to add value in first position. "<<endl
		<<"Press 3. to add value at some position."<<endl
		<<"Press 4. display values."<<endl
		<<"press 5. to delete value from first."<<endl
		<<"press 6. to delete value from last."<<endl
		<<"press 7. to delete value from between."<<endl
		<<"press 8. to count a nodes."<<endl
		<<"press 9. to search a value"<<endl
		<<"press 10. to sort."<<endl
		<<"press 11. to exit."<<endl
		<<"Enter your choice....."<<endl;
	cin>>c;
		switch(c)
		{
		case 1:
			cout<<"Enter a element to add :"<<endl;
			cin>>a;
			l.add(a);
			l.display();
			break;
		case 2:
			cout<<"Enter a element to add :"<<endl;
			cin>>a;
			l.addas_first(a);
			l.display();
			break;
		case 3:
			cout<<"Enter a element to add :"<<endl;
			cin>>a;
			cout<<"Enter a position:";
			cin>>b;
			l.addas_pos(b,a);
			l.display();
			break;
		case 4:
			l.display();
			break;
		case 5:
			l.dele_first();
			l.display();
			break;
		case 6:
			l.dele_last();
			l.display();
			break;
		case 7:
			cout<<"Enter a position:";
			cin>>b;
			l.dele_bet(b);
			l.display();
			break;
		case 8:
			l.count();
			break;
		case 9:
			cout<<"Enter a element to search :"<<endl;
			cin>>a;
			l.search(a);
			break;
		case 11:
			exit(0);
			break;
		case 10:
			l.sort();
		}
	}while(c!=11);
}
